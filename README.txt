Σχεδιαστικές επιλογές άσκησης Java στον αντικειμενοστραφή προγραμματισμό.

Η εργασία μου περιλαμβάνει 11 διαφορετικά αρχεία.Αυτά τα αρχεία είναι τα εξής:
Plane.java , equipmentCompartment.java , planeComponent.java , cargoBay.java ,
privateCompartment.java , cleaningEmployee.java , maintenanceEmployee.java ,
securityEmployee.java , employee.java , passengerCompartment.java καθώς και η main.java
του προγράμματος.
Για να τρέξει σωστά το πρόγραμμα , αρχικά γράφουμε την εντολή javac main.java και έπειτα
για να τρέξουμε την εργασία , γράφουμε java main και λαμβάνουμε τα επιθυμητά αποτελέσματα.

Αρχικά , σε αυτό το αρχείο , θα σας περιγράψω πρώτα την ιεραρχία κλάσεων που ακολούθησα και , 
έπειτα θα περιγράψω αναλυτικά τις λειτουργίες κάθε μίας από τις κλάσεις που έχω υλοποιήσει σε 
αυτή την άσκηση.

Ιεραρχία κλάσεων :
Αρχικά , ΟΛΑ τα αρχεία , έχουν ως κύρια κλάση την κλάση Object της γλώσσας Java.
Πρέπει να πω ότι , σκέφτηκα στις κλάσεις που κληρονομούν την Object να βάλω class "onomaclassis" extends Object
αλλά έπειτα απο ψάξιμο διάβασα οτι αυτό θεωρείται πλεονασμός.
Έπειτα έχω ακολουθήσει δική μου ιεραρχία.

Έχω ορίσει μια abstract κλαση planeComponent (μαζί με κάποιες abstract συναρτήσεις) γιατί έτσι πρέπει
να είναι , λόγω των απαιτήσεων του προγράμματος.
Στη συνέχεια έχω ορίσει μία κλάση με όνομα passengerCompartment η οποία κληρονομέι την κλαση planeComponet.
Επειδή κληρονομέι μια αφηρημένη κλάση , έχω γράψει στον ορισμο της τη λέξη extends planeComponent.
Στο ίδιο επίπεδο με τη passengerCompartment βρίσκεται και η κλάση privateCompartment η οποία είναι αφηρημένη
και δεν περιλαμβάνει κάτι στο σώμα της.Την κλαση privateCompartment κληρονομέι , με την ίδια λογική η κλάση
cargoBay (extends privateCompartment) και η κλάση equipmentCompartment(extends privateCompartment).

Επίσης , έχω ορίσει μία "κύρια" αφηρημένη κλάση employee μαζί με ένα σύνολο από κάποιες συναρτήσεις.
Την κλάση employee  κληρονομούν , οι κλάσεις securityEmployee(extends employee) , maintenanceEmployee(extends
employee) καθώς και η κλάση cleaningEmployee(extends employee).

Επιπροσθέτως , έχω ορίσει και μία ακόμα κλάση, τη κλάση Plane η οποία , απλά κληρονομέι την κλάση Object της γλώσσας
Java και καμία άλλη απο τις προαναφερθείσες κλάσεις , και αυτό προφανώς δεν έχει οριστεί κατα τον ορισμό της 
κλάσης.

Τέλος , υπάρχει και η main κλάση του προγράμματος , η οποία ακολουθεί πιστά τις απαιτήσεις της εκφώνησης και
κάνει τις απαραίτητες λειτουργίες για να αποδειχθεί η ορθότητα της εργασίας αυτής.


Τώρα , θα αναλύσω τον κώδικα των κλάσεων και θα τεκμηριώσω τις λειτουργίες των κλάσεων μου.

-Αρχείο planeComponent.java : έχω ορίσει την κλάση planeComponent ως αφηρημένη , όπως είναι αντιληπτό από 
την εκφώνηση.Έχω ορίσει να παρέχει 1 ιδιωτική ακέραια μεταβλητή , το "μέγεθος" , καθώς και 2 αφηρημένες 
συναρτήσεις μέλη και άλλες 2 συναρτήσεις.
-Αρχείο passengerCompartment.java : Η isSecured αρχικοποιέιται με 0 επειδή δεν είναι secured  η συνιστώσα όταν
 φτιάχνετα και αυτή η μεταβλητή αλλάζει όταν καλείται ένας εργαζόμενος να δουλέψει σε αυτή.Σε επίπεδο 
συναρτήσεων,δεν έχω φτιάξει κάτι το εκσυζητημένο , πέρα απο accessors που χρειάζονται σε κάποια μέρη της 
υλοποίησης.
-Αρχέιο private Compartment.java : Σε αυτό το αρχείο έχω ορίσει 3 ιδιωτικές μεταβλητές τύπου int καθώς και 
6 συναρτήσεις μέλη εκ των οποίων,4 είναι & accessors 2 είναι οι συναρτήσεις που ζητάει η εκφώνηση να 
υλοποιήσουμε . Όλες οι συναρτήσεις που ανέφερα έχουν οριστεί ως δημόσιες και αφηρημένες και ορίζονται στα επόμενα 
αρχεία του προγράμματος.
-Αρχείο cargoBay.java Q: οι 3 ιδιωτικές μεταβλητές που ορίστηκαν και κληρονομούνται απ την κλάση privateCompartment αρχικά είναι
 0 (αρχικοποιούνται στον constructor), αλλάζουν (δηλαδή καλούνται οι accessors ) ,όταν καλώ την workOn . Όπως προανέφερα ,έχουν 
οριστεί και οι κατάλληλοι accessors των οποίων την λειτουργία υποδηλώνει το όνομα του και τίποτα παραπάνω . Τέλος ορίζεται 
και η συνάρτηση ready_check ,η  process η οποία καλέι την workOn . Επίσης υπάρχει μία συνάρτηση allOk η οποία ουσιαστικά μας λέει αν τα 3
 ιδιωτικά μέλη που προανέφερα έχουν γίνει 1 (δηλαδή έχει κληθεί υπάλληλος να δουλέψει σ'αυτά) .
-Αρχείο equipmentCompartment.java: Γίνται ακριβώς οι ίδιες διαδικασίες με το αρχείο cargoBay μόνο που αυτή τη φορά αφορούν το αρχέιο
equipmentCompartment.

-Αρχείο employee.java: τα στοιχεία του εργαζομένου . Μια ιδιωτική μεταβλητή με το όνομα του καθώς και 4 συναρτήσεις εκ των οποίων οι 3 
ειναι αφηρημένες .
-Αρχείο cleaningEmployee.java : Ο εργαζόμενος καθαρισμού. Ξεκινάμε με constructor ο οποίος δέχεται ώς όρισμα ενα string και το τοποθετεί 
στο μέρος name . Στη συνέχεια υπάρχει η συνάρτηση report που εμφανίζει ένα απλό μήνυμα . Τέλος υπάρχουν οι συναρτήσεις workOn οι οποίες 
καλούνται για τα 2 μέρη του αεροπλάνου στα οποία εργάζεται ο συγκεκριμένος εργαζόμενος.
-Αρχείο maintenanceEmployee.java : Ο εργαζόμενος συντήρησης. Ξεκινάμε με constructor ο οποίος δέχεται ώς όρισμα ενα string και το τοποθετεί 
στο μέρος name . Στη συνέχεια υπάρχει η συνάρτηση report που εμφανίζει ένα απλό μήνυμα . Τέλος υπάρχουν οι συναρτήσεις workOn οι οποίες 
καλούνται για τα 2 μέρη του αεροπλάνου στα οποία εργάζεται ο συγκεκριμένος εργαζόμενος.
-Αρχείο securityEmployee.java : Ο εργαζόμενος ασφαλείας. Ξεκινάμε με constructor ο οποίος δέχεται ώς όρισμα ενα string και το τοποθετεί 
στο μέρος name . Στη συνέχεια υπάρχει η συνάρτηση report που εμφανίζει ένα απλό μήνυμα . Τέλος υπάρχουν οι συναρτήσεις workOn οι οποίες 
καλούνται για τα 3 μέρη του αεροπλάνου στα οποία εργάζεται ο συγκεκριμένος εργαζόμενος.

-Αρχείο Plane.java : Το αεροπλάνο. Έχουν δηλωθέι τα διάφορα private μέλη όπως το όνομα , η χωρητικότητα χωρος εμπορευμάτων 
καθιώς και τα διάφορα compartments.Επίσης έχω βάλει 2 μεταβλητές ώς ιδιωτικές οι οποίες ήταν δική μου αυστηρή επιλογή. Η ακέραια passengerCompartmentNum
 και η ακέραια isReady η οποία ουσιαστικα΄, αρχικοποιείται με 0 και γίνεται 1 όταν καλείται η συνάρτηση beready και ουσιαστικά υποδεικνύεί αν το αεροπλάνο
 είναι έτοιμο για αναχώρηση 
. Ο constructor  δέχεται 2 ορίσματα. Τον τίτλο (σε συμβολοσειρά  ) καθώς και την χωρητικότητα
(σε ακέραιο) . Αρχικά θέτω τη τιμή της μεταβλητής isReady=0 και έπειτα φτιάχνω έναν πίνακα με 3 equipment compartments όπως ζητείται και στη συνέχεια επιλέγω
ο αριθμός των passengerCompartment (passengerCompartmentNum)να επιλέγεται τυχαία από την  γεννήτρια τυχαίων αριθμών της γλώσσας Java. Ο αριθμός αυτός έχω επιλέξει
 να είναι ακέραιος 1<passengerCompartmentNum<5.Τώρα θα εξηγήσω την λειτουργία των συναρτήσεων -μελών .
Η process παίρνει όρισμα έναν υπάλληλο και καλέι τις αντίστοιχες process για τα μέλη του αεροπλάνου(για το cargobay , για τα 3 equipmentcompartment και
για τα "ν" passengerccompartment).
H beready ουσιαστικά κάνει το ready_check αλλά επέλεξα να το βάλω ξεχωριστά . Ουσιαστικά τσεκάρει άν σε όλα τα μέλη του αεροπλάνου η συναρτήσεις-μέλη
(onomaMerous::allOk())  επιστρέφουν 1 , οπότε όλα τα μέλη είναι κομπλέ , άρα το αεροπλάνο είναι έτοιμο.Αρα η private μεταβλητη του αερπλάνου με όνομα 
isReady , γίνεται απο 0 σε 1. Η ready_check καλεί την beready και ...οταν τελειώσει η beready ελέγχουμε τη μεταβλητή isReady και ανάλογα με τη τιμή της
επιστρέφουμε αντιστοιχο μήνυμα.
Υπάρχουν 3  accessors που επιστρέφουν το cargobay , τον πινακα equipmentcompartment και τον πίνακα passengercompartment και 1 accessor που επιστρέφει 
τον passengerCompartmentNum .

-Αρχείο main.java : Η main κλάση του προγράμματος.


















